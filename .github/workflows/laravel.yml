name: Laravel CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  tests:
    name: PHP ${{ matrix.php }} â€¢ Node ${{ matrix.node }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php: ['8.2', '8.3']
        node: ['20']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, intl, pdo, sqlite, pdo_sqlite
          coverage: none

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install PHP dependencies
        run: composer install --no-interaction --prefer-dist --no-progress --no-suggest

      - name: Install Node dependencies
        run: npm ci

      - name: Build frontend assets (Vite)
        run: npm run build

      - name: Prepare environment
        run: cp .env.example .env

      - name: Generate APP_KEY
        run: php artisan key:generate
        # The APP_KEY secures encrypted data (cookies, sessions).
        # Laravel requires this to run safely.

      - name: Configure SQLite for tests
        run: |
          mkdir -p database
          touch database/database.sqlite
          php -r "file_put_contents('.env', PHP_EOL.'DB_CONNECTION=sqlite'.PHP_EOL.'DB_DATABASE='.getcwd().'/database/database.sqlite'.PHP_EOL, FILE_APPEND);"

      - name: Run database migrations
        run: php artisan migrate --force

      - name: Run test suite
        run: php artisan test --colors=always
